#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KinkhaoForm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KinkhaoDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertTURNO(TURNO instance);
    partial void UpdateTURNO(TURNO instance);
    partial void DeleteTURNO(TURNO instance);
    partial void InsertCAMERIERE(CAMERIERE instance);
    partial void UpdateCAMERIERE(CAMERIERE instance);
    partial void DeleteCAMERIERE(CAMERIERE instance);
    partial void InsertCASSIERE(CASSIERE instance);
    partial void UpdateCASSIERE(CASSIERE instance);
    partial void DeleteCASSIERE(CASSIERE instance);
    partial void InsertCLIENTE(CLIENTE instance);
    partial void UpdateCLIENTE(CLIENTE instance);
    partial void DeleteCLIENTE(CLIENTE instance);
    partial void InsertCONTRATTO(CONTRATTO instance);
    partial void UpdateCONTRATTO(CONTRATTO instance);
    partial void DeleteCONTRATTO(CONTRATTO instance);
    partial void InsertCUOCO(CUOCO instance);
    partial void UpdateCUOCO(CUOCO instance);
    partial void DeleteCUOCO(CUOCO instance);
    partial void InsertDDT(DDT instance);
    partial void UpdateDDT(DDT instance);
    partial void DeleteDDT(DDT instance);
    partial void InsertESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE instance);
    partial void UpdateESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE instance);
    partial void DeleteESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE instance);
    partial void InsertESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE instance);
    partial void UpdateESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE instance);
    partial void DeleteESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE instance);
    partial void InsertESECUZIONE_CUOCO(ESECUZIONE_CUOCO instance);
    partial void UpdateESECUZIONE_CUOCO(ESECUZIONE_CUOCO instance);
    partial void DeleteESECUZIONE_CUOCO(ESECUZIONE_CUOCO instance);
    partial void InsertFORNITORE(FORNITORE instance);
    partial void UpdateFORNITORE(FORNITORE instance);
    partial void DeleteFORNITORE(FORNITORE instance);
    partial void InsertGRADIMENTO(GRADIMENTO instance);
    partial void UpdateGRADIMENTO(GRADIMENTO instance);
    partial void DeleteGRADIMENTO(GRADIMENTO instance);
    partial void InsertINGREDIENTE(INGREDIENTE instance);
    partial void UpdateINGREDIENTE(INGREDIENTE instance);
    partial void DeleteINGREDIENTE(INGREDIENTE instance);
    partial void InsertORDINABILE(ORDINABILE instance);
    partial void UpdateORDINABILE(ORDINABILE instance);
    partial void DeleteORDINABILE(ORDINABILE instance);
    partial void InsertORDINAZIONE(ORDINAZIONE instance);
    partial void UpdateORDINAZIONE(ORDINAZIONE instance);
    partial void DeleteORDINAZIONE(ORDINAZIONE instance);
    partial void InsertORDINE(ORDINE instance);
    partial void UpdateORDINE(ORDINE instance);
    partial void DeleteORDINE(ORDINE instance);
    partial void InsertPAGAMENTO(PAGAMENTO instance);
    partial void UpdatePAGAMENTO(PAGAMENTO instance);
    partial void DeletePAGAMENTO(PAGAMENTO instance);
    partial void InsertPRENOTAZIONE(PRENOTAZIONE instance);
    partial void UpdatePRENOTAZIONE(PRENOTAZIONE instance);
    partial void DeletePRENOTAZIONE(PRENOTAZIONE instance);
    partial void InsertREALIZZAZIONE(REALIZZAZIONE instance);
    partial void UpdateREALIZZAZIONE(REALIZZAZIONE instance);
    partial void DeleteREALIZZAZIONE(REALIZZAZIONE instance);
    partial void InsertSCONTRINO(SCONTRINO instance);
    partial void UpdateSCONTRINO(SCONTRINO instance);
    partial void DeleteSCONTRINO(SCONTRINO instance);
    partial void InsertSERVIZIO(SERVIZIO instance);
    partial void UpdateSERVIZIO(SERVIZIO instance);
    partial void DeleteSERVIZIO(SERVIZIO instance);
    partial void InsertTAVOLO(TAVOLO instance);
    partial void UpdateTAVOLO(TAVOLO instance);
    partial void DeleteTAVOLO(TAVOLO instance);
    partial void InsertFATTURA(FATTURA instance);
    partial void UpdateFATTURA(FATTURA instance);
    partial void DeleteFATTURA(FATTURA instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::KinkhaoForm.Properties.Settings.Default.KinkhaoDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TURNO> TURNO
		{
			get
			{
				return this.GetTable<TURNO>();
			}
		}
		
		public System.Data.Linq.Table<CAMERIERE> CAMERIERE
		{
			get
			{
				return this.GetTable<CAMERIERE>();
			}
		}
		
		public System.Data.Linq.Table<CASSIERE> CASSIERE
		{
			get
			{
				return this.GetTable<CASSIERE>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTE> CLIENTE
		{
			get
			{
				return this.GetTable<CLIENTE>();
			}
		}
		
		public System.Data.Linq.Table<CONTRATTO> CONTRATTO
		{
			get
			{
				return this.GetTable<CONTRATTO>();
			}
		}
		
		public System.Data.Linq.Table<CUOCO> CUOCO
		{
			get
			{
				return this.GetTable<CUOCO>();
			}
		}
		
		public System.Data.Linq.Table<DDT> DDT
		{
			get
			{
				return this.GetTable<DDT>();
			}
		}
		
		public System.Data.Linq.Table<ESECUZIONE_CAMERIERE> ESECUZIONE_CAMERIERE
		{
			get
			{
				return this.GetTable<ESECUZIONE_CAMERIERE>();
			}
		}
		
		public System.Data.Linq.Table<ESECUZIONE_CASSIERE> ESECUZIONE_CASSIERE
		{
			get
			{
				return this.GetTable<ESECUZIONE_CASSIERE>();
			}
		}
		
		public System.Data.Linq.Table<ESECUZIONE_CUOCO> ESECUZIONE_CUOCO
		{
			get
			{
				return this.GetTable<ESECUZIONE_CUOCO>();
			}
		}
		
		public System.Data.Linq.Table<FORNITORE> FORNITORE
		{
			get
			{
				return this.GetTable<FORNITORE>();
			}
		}
		
		public System.Data.Linq.Table<GRADIMENTO> GRADIMENTO
		{
			get
			{
				return this.GetTable<GRADIMENTO>();
			}
		}
		
		public System.Data.Linq.Table<INGREDIENTE> INGREDIENTE
		{
			get
			{
				return this.GetTable<INGREDIENTE>();
			}
		}
		
		public System.Data.Linq.Table<ORDINABILE> ORDINABILE
		{
			get
			{
				return this.GetTable<ORDINABILE>();
			}
		}
		
		public System.Data.Linq.Table<ORDINAZIONE> ORDINAZIONE
		{
			get
			{
				return this.GetTable<ORDINAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<ORDINE> ORDINE
		{
			get
			{
				return this.GetTable<ORDINE>();
			}
		}
		
		public System.Data.Linq.Table<PAGAMENTO> PAGAMENTO
		{
			get
			{
				return this.GetTable<PAGAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<PRENOTAZIONE> PRENOTAZIONE
		{
			get
			{
				return this.GetTable<PRENOTAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<REALIZZAZIONE> REALIZZAZIONE
		{
			get
			{
				return this.GetTable<REALIZZAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<SCONTRINO> SCONTRINO
		{
			get
			{
				return this.GetTable<SCONTRINO>();
			}
		}
		
		public System.Data.Linq.Table<SERVIZIO> SERVIZIO
		{
			get
			{
				return this.GetTable<SERVIZIO>();
			}
		}
		
		public System.Data.Linq.Table<TAVOLO> TAVOLO
		{
			get
			{
				return this.GetTable<TAVOLO>();
			}
		}
		
		public System.Data.Linq.Table<FATTURA> FATTURA
		{
			get
			{
				return this.GetTable<FATTURA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TURNO")]
	public partial class TURNO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_Turno;
		
		private decimal _Ora_Inizio;
		
		private decimal _Ora_Fine;
		
		private EntitySet<ESECUZIONE_CAMERIERE> _ESECUZIONE_CAMERIERE;
		
		private EntitySet<ESECUZIONE_CASSIERE> _ESECUZIONE_CASSIERE;
		
		private EntitySet<ESECUZIONE_CUOCO> _ESECUZIONE_CUOCO;
		
		private EntitySet<SERVIZIO> _SERVIZIO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_TurnoChanging(System.DateTime value);
    partial void OnData_TurnoChanged();
    partial void OnOra_InizioChanging(decimal value);
    partial void OnOra_InizioChanged();
    partial void OnOra_FineChanging(decimal value);
    partial void OnOra_FineChanged();
    #endregion
		
		public TURNO()
		{
			this._ESECUZIONE_CAMERIERE = new EntitySet<ESECUZIONE_CAMERIERE>(new Action<ESECUZIONE_CAMERIERE>(this.attach_ESECUZIONE_CAMERIERE), new Action<ESECUZIONE_CAMERIERE>(this.detach_ESECUZIONE_CAMERIERE));
			this._ESECUZIONE_CASSIERE = new EntitySet<ESECUZIONE_CASSIERE>(new Action<ESECUZIONE_CASSIERE>(this.attach_ESECUZIONE_CASSIERE), new Action<ESECUZIONE_CASSIERE>(this.detach_ESECUZIONE_CASSIERE));
			this._ESECUZIONE_CUOCO = new EntitySet<ESECUZIONE_CUOCO>(new Action<ESECUZIONE_CUOCO>(this.attach_ESECUZIONE_CUOCO), new Action<ESECUZIONE_CUOCO>(this.detach_ESECUZIONE_CUOCO));
			this._SERVIZIO = new EntitySet<SERVIZIO>(new Action<SERVIZIO>(this.attach_SERVIZIO), new Action<SERVIZIO>(this.detach_SERVIZIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Turno", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Turno
		{
			get
			{
				return this._Data_Turno;
			}
			set
			{
				if ((this._Data_Turno != value))
				{
					this.OnData_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Data_Turno = value;
					this.SendPropertyChanged("Data_Turno");
					this.OnData_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Inizio", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Inizio
		{
			get
			{
				return this._Ora_Inizio;
			}
			set
			{
				if ((this._Ora_Inizio != value))
				{
					this.OnOra_InizioChanging(value);
					this.SendPropertyChanging();
					this._Ora_Inizio = value;
					this.SendPropertyChanged("Ora_Inizio");
					this.OnOra_InizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Fine", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Fine
		{
			get
			{
				return this._Ora_Fine;
			}
			set
			{
				if ((this._Ora_Fine != value))
				{
					this.OnOra_FineChanging(value);
					this.SendPropertyChanging();
					this._Ora_Fine = value;
					this.SendPropertyChanged("Ora_Fine");
					this.OnOra_FineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CAMERIERE", Storage="_ESECUZIONE_CAMERIERE", ThisKey="Data_Turno,Ora_Inizio,Ora_Fine", OtherKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno")]
		public EntitySet<ESECUZIONE_CAMERIERE> ESECUZIONE_CAMERIERE
		{
			get
			{
				return this._ESECUZIONE_CAMERIERE;
			}
			set
			{
				this._ESECUZIONE_CAMERIERE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CASSIERE", Storage="_ESECUZIONE_CASSIERE", ThisKey="Data_Turno,Ora_Inizio,Ora_Fine", OtherKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno")]
		public EntitySet<ESECUZIONE_CASSIERE> ESECUZIONE_CASSIERE
		{
			get
			{
				return this._ESECUZIONE_CASSIERE;
			}
			set
			{
				this._ESECUZIONE_CASSIERE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CUOCO", Storage="_ESECUZIONE_CUOCO", ThisKey="Data_Turno,Ora_Inizio,Ora_Fine", OtherKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno")]
		public EntitySet<ESECUZIONE_CUOCO> ESECUZIONE_CUOCO
		{
			get
			{
				return this._ESECUZIONE_CUOCO;
			}
			set
			{
				this._ESECUZIONE_CUOCO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_SERVIZIO", Storage="_SERVIZIO", ThisKey="Data_Turno,Ora_Inizio,Ora_Fine", OtherKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno")]
		public EntitySet<SERVIZIO> SERVIZIO
		{
			get
			{
				return this._SERVIZIO;
			}
			set
			{
				this._SERVIZIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = this;
		}
		
		private void detach_ESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = null;
		}
		
		private void attach_ESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = this;
		}
		
		private void detach_ESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = null;
		}
		
		private void attach_ESECUZIONE_CUOCO(ESECUZIONE_CUOCO entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = this;
		}
		
		private void detach_ESECUZIONE_CUOCO(ESECUZIONE_CUOCO entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = null;
		}
		
		private void attach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = this;
		}
		
		private void detach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.TURNO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAMERIERE")]
	public partial class CAMERIERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Fiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private char _Genere;
		
		private decimal _Telefono;
		
		private string _Indirizzo;
		
		private string _E_Mail;
		
		private System.DateTime _Data_di_Nascita;
		
		private EntitySet<CONTRATTO> _CONTRATTO;
		
		private EntitySet<ESECUZIONE_CAMERIERE> _ESECUZIONE_CAMERIERE;
		
		private EntitySet<GRADIMENTO> _GRADIMENTO;
		
		private EntitySet<SERVIZIO> _SERVIZIO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnGenereChanging(char value);
    partial void OnGenereChanged();
    partial void OnTelefonoChanging(decimal value);
    partial void OnTelefonoChanged();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnData_di_NascitaChanging(System.DateTime value);
    partial void OnData_di_NascitaChanged();
    #endregion
		
		public CAMERIERE()
		{
			this._CONTRATTO = new EntitySet<CONTRATTO>(new Action<CONTRATTO>(this.attach_CONTRATTO), new Action<CONTRATTO>(this.detach_CONTRATTO));
			this._ESECUZIONE_CAMERIERE = new EntitySet<ESECUZIONE_CAMERIERE>(new Action<ESECUZIONE_CAMERIERE>(this.attach_ESECUZIONE_CAMERIERE), new Action<ESECUZIONE_CAMERIERE>(this.detach_ESECUZIONE_CAMERIERE));
			this._GRADIMENTO = new EntitySet<GRADIMENTO>(new Action<GRADIMENTO>(this.attach_GRADIMENTO), new Action<GRADIMENTO>(this.detach_GRADIMENTO));
			this._SERVIZIO = new EntitySet<SERVIZIO>(new Action<SERVIZIO>(this.attach_SERVIZIO), new Action<SERVIZIO>(this.detach_SERVIZIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genere", DbType="Char(1) NOT NULL")]
		public char Genere
		{
			get
			{
				return this._Genere;
			}
			set
			{
				if ((this._Genere != value))
				{
					this.OnGenereChanging(value);
					this.SendPropertyChanging();
					this._Genere = value;
					this.SendPropertyChanged("Genere");
					this.OnGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Decimal(11,0) NOT NULL")]
		public decimal Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_di_Nascita", DbType="Date NOT NULL")]
		public System.DateTime Data_di_Nascita
		{
			get
			{
				return this._Data_di_Nascita;
			}
			set
			{
				if ((this._Data_di_Nascita != value))
				{
					this.OnData_di_NascitaChanging(value);
					this.SendPropertyChanging();
					this._Data_di_Nascita = value;
					this.SendPropertyChanged("Data_di_Nascita");
					this.OnData_di_NascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_CONTRATTO", Storage="_CONTRATTO", ThisKey="Codice_Fiscale", OtherKey="Cameriere_Codice_Fiscale")]
		public EntitySet<CONTRATTO> CONTRATTO
		{
			get
			{
				return this._CONTRATTO;
			}
			set
			{
				this._CONTRATTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_ESECUZIONE_CAMERIERE", Storage="_ESECUZIONE_CAMERIERE", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale_Cameriere")]
		public EntitySet<ESECUZIONE_CAMERIERE> ESECUZIONE_CAMERIERE
		{
			get
			{
				return this._ESECUZIONE_CAMERIERE;
			}
			set
			{
				this._ESECUZIONE_CAMERIERE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_GRADIMENTO", Storage="_GRADIMENTO", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale")]
		public EntitySet<GRADIMENTO> GRADIMENTO
		{
			get
			{
				return this._GRADIMENTO;
			}
			set
			{
				this._GRADIMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_SERVIZIO", Storage="_SERVIZIO", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale_Cameriere")]
		public EntitySet<SERVIZIO> SERVIZIO
		{
			get
			{
				return this._SERVIZIO;
			}
			set
			{
				this._SERVIZIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = this;
		}
		
		private void detach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = null;
		}
		
		private void attach_ESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = this;
		}
		
		private void detach_ESECUZIONE_CAMERIERE(ESECUZIONE_CAMERIERE entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = null;
		}
		
		private void attach_GRADIMENTO(GRADIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = this;
		}
		
		private void detach_GRADIMENTO(GRADIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = null;
		}
		
		private void attach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = this;
		}
		
		private void detach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.CAMERIERE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CASSIERE")]
	public partial class CASSIERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Fiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private char _Genere;
		
		private decimal _Telefono;
		
		private string _Indirizzo;
		
		private string _E_Mail;
		
		private System.DateTime _Data_di_Nascita;
		
		private EntitySet<CONTRATTO> _CONTRATTO;
		
		private EntitySet<ESECUZIONE_CASSIERE> _ESECUZIONE_CASSIERE;
		
		private EntitySet<SCONTRINO> _SCONTRINO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnGenereChanging(char value);
    partial void OnGenereChanged();
    partial void OnTelefonoChanging(decimal value);
    partial void OnTelefonoChanged();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnData_di_NascitaChanging(System.DateTime value);
    partial void OnData_di_NascitaChanged();
    #endregion
		
		public CASSIERE()
		{
			this._CONTRATTO = new EntitySet<CONTRATTO>(new Action<CONTRATTO>(this.attach_CONTRATTO), new Action<CONTRATTO>(this.detach_CONTRATTO));
			this._ESECUZIONE_CASSIERE = new EntitySet<ESECUZIONE_CASSIERE>(new Action<ESECUZIONE_CASSIERE>(this.attach_ESECUZIONE_CASSIERE), new Action<ESECUZIONE_CASSIERE>(this.detach_ESECUZIONE_CASSIERE));
			this._SCONTRINO = new EntitySet<SCONTRINO>(new Action<SCONTRINO>(this.attach_SCONTRINO), new Action<SCONTRINO>(this.detach_SCONTRINO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genere", DbType="Char(1) NOT NULL")]
		public char Genere
		{
			get
			{
				return this._Genere;
			}
			set
			{
				if ((this._Genere != value))
				{
					this.OnGenereChanging(value);
					this.SendPropertyChanging();
					this._Genere = value;
					this.SendPropertyChanged("Genere");
					this.OnGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Decimal(11,0) NOT NULL")]
		public decimal Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_di_Nascita", DbType="Date NOT NULL")]
		public System.DateTime Data_di_Nascita
		{
			get
			{
				return this._Data_di_Nascita;
			}
			set
			{
				if ((this._Data_di_Nascita != value))
				{
					this.OnData_di_NascitaChanging(value);
					this.SendPropertyChanging();
					this._Data_di_Nascita = value;
					this.SendPropertyChanged("Data_di_Nascita");
					this.OnData_di_NascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_CONTRATTO", Storage="_CONTRATTO", ThisKey="Codice_Fiscale", OtherKey="Cassiere_Codice_Fiscale")]
		public EntitySet<CONTRATTO> CONTRATTO
		{
			get
			{
				return this._CONTRATTO;
			}
			set
			{
				this._CONTRATTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_ESECUZIONE_CASSIERE", Storage="_ESECUZIONE_CASSIERE", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale_Cassiere")]
		public EntitySet<ESECUZIONE_CASSIERE> ESECUZIONE_CASSIERE
		{
			get
			{
				return this._ESECUZIONE_CASSIERE;
			}
			set
			{
				this._ESECUZIONE_CASSIERE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_SCONTRINO", Storage="_SCONTRINO", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale")]
		public EntitySet<SCONTRINO> SCONTRINO
		{
			get
			{
				return this._SCONTRINO;
			}
			set
			{
				this._SCONTRINO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = this;
		}
		
		private void detach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = null;
		}
		
		private void attach_ESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = this;
		}
		
		private void detach_ESECUZIONE_CASSIERE(ESECUZIONE_CASSIERE entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = null;
		}
		
		private void attach_SCONTRINO(SCONTRINO entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = this;
		}
		
		private void detach_SCONTRINO(SCONTRINO entity)
		{
			this.SendPropertyChanging();
			entity.CASSIERE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTE")]
	public partial class CLIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_di_Telefono;
		
		private string _Nome;
		
		private string _Cognome;
		
		private EntitySet<PRENOTAZIONE> _PRENOTAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_di_TelefonoChanging(decimal value);
    partial void OnNumero_di_TelefonoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    #endregion
		
		public CLIENTE()
		{
			this._PRENOTAZIONE = new EntitySet<PRENOTAZIONE>(new Action<PRENOTAZIONE>(this.attach_PRENOTAZIONE), new Action<PRENOTAZIONE>(this.detach_PRENOTAZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_di_Telefono", DbType="Decimal(11,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_di_Telefono
		{
			get
			{
				return this._Numero_di_Telefono;
			}
			set
			{
				if ((this._Numero_di_Telefono != value))
				{
					this.OnNumero_di_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._Numero_di_Telefono = value;
					this.SendPropertyChanged("Numero_di_Telefono");
					this.OnNumero_di_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_PRENOTAZIONE", Storage="_PRENOTAZIONE", ThisKey="Numero_di_Telefono", OtherKey="Numero_di_Telefono")]
		public EntitySet<PRENOTAZIONE> PRENOTAZIONE
		{
			get
			{
				return this._PRENOTAZIONE;
			}
			set
			{
				this._PRENOTAZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRENOTAZIONE(PRENOTAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = this;
		}
		
		private void detach_PRENOTAZIONE(PRENOTAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRATTO")]
	public partial class CONTRATTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Codice_Contratto;
		
		private System.DateTime _Data_Inizio;
		
		private decimal _Stipendio;
		
		private System.Nullable<System.DateTime> _Data_Fine;
		
		private string _Cuoco_Codice_Fiscale;
		
		private string _Cassiere_Codice_Fiscale;
		
		private string _Cameriere_Codice_Fiscale;
		
		private EntityRef<CAMERIERE> _CAMERIERE;
		
		private EntityRef<CASSIERE> _CASSIERE;
		
		private EntityRef<CUOCO> _CUOCO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_ContrattoChanging(decimal value);
    partial void OnCodice_ContrattoChanged();
    partial void OnData_InizioChanging(System.DateTime value);
    partial void OnData_InizioChanged();
    partial void OnStipendioChanging(decimal value);
    partial void OnStipendioChanged();
    partial void OnData_FineChanging(System.Nullable<System.DateTime> value);
    partial void OnData_FineChanged();
    partial void OnCuoco_Codice_FiscaleChanging(string value);
    partial void OnCuoco_Codice_FiscaleChanged();
    partial void OnCassiere_Codice_FiscaleChanging(string value);
    partial void OnCassiere_Codice_FiscaleChanged();
    partial void OnCameriere_Codice_FiscaleChanging(string value);
    partial void OnCameriere_Codice_FiscaleChanged();
    #endregion
		
		public CONTRATTO()
		{
			this._CAMERIERE = default(EntityRef<CAMERIERE>);
			this._CASSIERE = default(EntityRef<CASSIERE>);
			this._CUOCO = default(EntityRef<CUOCO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Contratto", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Codice_Contratto
		{
			get
			{
				return this._Codice_Contratto;
			}
			set
			{
				if ((this._Codice_Contratto != value))
				{
					this.OnCodice_ContrattoChanging(value);
					this.SendPropertyChanging();
					this._Codice_Contratto = value;
					this.SendPropertyChanged("Codice_Contratto");
					this.OnCodice_ContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Inizio", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Inizio
		{
			get
			{
				return this._Data_Inizio;
			}
			set
			{
				if ((this._Data_Inizio != value))
				{
					this.OnData_InizioChanging(value);
					this.SendPropertyChanging();
					this._Data_Inizio = value;
					this.SendPropertyChanged("Data_Inizio");
					this.OnData_InizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stipendio", DbType="Decimal(5,2) NOT NULL")]
		public decimal Stipendio
		{
			get
			{
				return this._Stipendio;
			}
			set
			{
				if ((this._Stipendio != value))
				{
					this.OnStipendioChanging(value);
					this.SendPropertyChanging();
					this._Stipendio = value;
					this.SendPropertyChanged("Stipendio");
					this.OnStipendioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Fine", DbType="Date")]
		public System.Nullable<System.DateTime> Data_Fine
		{
			get
			{
				return this._Data_Fine;
			}
			set
			{
				if ((this._Data_Fine != value))
				{
					this.OnData_FineChanging(value);
					this.SendPropertyChanging();
					this._Data_Fine = value;
					this.SendPropertyChanged("Data_Fine");
					this.OnData_FineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuoco_Codice_Fiscale", DbType="Char(16)")]
		public string Cuoco_Codice_Fiscale
		{
			get
			{
				return this._Cuoco_Codice_Fiscale;
			}
			set
			{
				if ((this._Cuoco_Codice_Fiscale != value))
				{
					if (this._CUOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCuoco_Codice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Cuoco_Codice_Fiscale = value;
					this.SendPropertyChanged("Cuoco_Codice_Fiscale");
					this.OnCuoco_Codice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cassiere_Codice_Fiscale", DbType="Char(16)")]
		public string Cassiere_Codice_Fiscale
		{
			get
			{
				return this._Cassiere_Codice_Fiscale;
			}
			set
			{
				if ((this._Cassiere_Codice_Fiscale != value))
				{
					if (this._CASSIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCassiere_Codice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Cassiere_Codice_Fiscale = value;
					this.SendPropertyChanged("Cassiere_Codice_Fiscale");
					this.OnCassiere_Codice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cameriere_Codice_Fiscale", DbType="Char(16)")]
		public string Cameriere_Codice_Fiscale
		{
			get
			{
				return this._Cameriere_Codice_Fiscale;
			}
			set
			{
				if ((this._Cameriere_Codice_Fiscale != value))
				{
					if (this._CAMERIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCameriere_Codice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Cameriere_Codice_Fiscale = value;
					this.SendPropertyChanged("Cameriere_Codice_Fiscale");
					this.OnCameriere_Codice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_CONTRATTO", Storage="_CAMERIERE", ThisKey="Cameriere_Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CAMERIERE CAMERIERE
		{
			get
			{
				return this._CAMERIERE.Entity;
			}
			set
			{
				CAMERIERE previousValue = this._CAMERIERE.Entity;
				if (((previousValue != value) 
							|| (this._CAMERIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAMERIERE.Entity = null;
						previousValue.CONTRATTO.Remove(this);
					}
					this._CAMERIERE.Entity = value;
					if ((value != null))
					{
						value.CONTRATTO.Add(this);
						this._Cameriere_Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Cameriere_Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CAMERIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_CONTRATTO", Storage="_CASSIERE", ThisKey="Cassiere_Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CASSIERE CASSIERE
		{
			get
			{
				return this._CASSIERE.Entity;
			}
			set
			{
				CASSIERE previousValue = this._CASSIERE.Entity;
				if (((previousValue != value) 
							|| (this._CASSIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASSIERE.Entity = null;
						previousValue.CONTRATTO.Remove(this);
					}
					this._CASSIERE.Entity = value;
					if ((value != null))
					{
						value.CONTRATTO.Add(this);
						this._Cassiere_Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Cassiere_Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CASSIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_CONTRATTO", Storage="_CUOCO", ThisKey="Cuoco_Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CUOCO CUOCO
		{
			get
			{
				return this._CUOCO.Entity;
			}
			set
			{
				CUOCO previousValue = this._CUOCO.Entity;
				if (((previousValue != value) 
							|| (this._CUOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUOCO.Entity = null;
						previousValue.CONTRATTO.Remove(this);
					}
					this._CUOCO.Entity = value;
					if ((value != null))
					{
						value.CONTRATTO.Add(this);
						this._Cuoco_Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Cuoco_Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CUOCO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUOCO")]
	public partial class CUOCO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Fiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private char _Genere;
		
		private decimal _Telefono;
		
		private string _Indirizzo;
		
		private string _E_Mail;
		
		private System.DateTime _Data_di_Nascita;
		
		private EntitySet<CONTRATTO> _CONTRATTO;
		
		private EntitySet<ESECUZIONE_CUOCO> _ESECUZIONE_CUOCO;
		
		private EntitySet<ORDINE> _ORDINE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnGenereChanging(char value);
    partial void OnGenereChanged();
    partial void OnTelefonoChanging(decimal value);
    partial void OnTelefonoChanged();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnData_di_NascitaChanging(System.DateTime value);
    partial void OnData_di_NascitaChanged();
    #endregion
		
		public CUOCO()
		{
			this._CONTRATTO = new EntitySet<CONTRATTO>(new Action<CONTRATTO>(this.attach_CONTRATTO), new Action<CONTRATTO>(this.detach_CONTRATTO));
			this._ESECUZIONE_CUOCO = new EntitySet<ESECUZIONE_CUOCO>(new Action<ESECUZIONE_CUOCO>(this.attach_ESECUZIONE_CUOCO), new Action<ESECUZIONE_CUOCO>(this.detach_ESECUZIONE_CUOCO));
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genere", DbType="Char(1) NOT NULL")]
		public char Genere
		{
			get
			{
				return this._Genere;
			}
			set
			{
				if ((this._Genere != value))
				{
					this.OnGenereChanging(value);
					this.SendPropertyChanging();
					this._Genere = value;
					this.SendPropertyChanged("Genere");
					this.OnGenereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Decimal(11,0) NOT NULL")]
		public decimal Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_di_Nascita", DbType="Date NOT NULL")]
		public System.DateTime Data_di_Nascita
		{
			get
			{
				return this._Data_di_Nascita;
			}
			set
			{
				if ((this._Data_di_Nascita != value))
				{
					this.OnData_di_NascitaChanging(value);
					this.SendPropertyChanging();
					this._Data_di_Nascita = value;
					this.SendPropertyChanged("Data_di_Nascita");
					this.OnData_di_NascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_CONTRATTO", Storage="_CONTRATTO", ThisKey="Codice_Fiscale", OtherKey="Cuoco_Codice_Fiscale")]
		public EntitySet<CONTRATTO> CONTRATTO
		{
			get
			{
				return this._CONTRATTO;
			}
			set
			{
				this._CONTRATTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_ESECUZIONE_CUOCO", Storage="_ESECUZIONE_CUOCO", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale_Cuoco")]
		public EntitySet<ESECUZIONE_CUOCO> ESECUZIONE_CUOCO
		{
			get
			{
				return this._ESECUZIONE_CUOCO;
			}
			set
			{
				this._ESECUZIONE_CUOCO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_ORDINE", Storage="_ORDINE", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = this;
		}
		
		private void detach_CONTRATTO(CONTRATTO entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = null;
		}
		
		private void attach_ESECUZIONE_CUOCO(ESECUZIONE_CUOCO entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = this;
		}
		
		private void detach_ESECUZIONE_CUOCO(ESECUZIONE_CUOCO entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = null;
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.CUOCO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DDT")]
	public partial class DDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _P_IVA;
		
		private string _Anno;
		
		private string _Numero;
		
		private System.DateTime _Data_partenza;
		
		private string _Luogo_partenza;
		
		private System.DateTime _Data_consegna;
		
		private string _Corriere;
		
		private EntitySet<ORDINE> _ORDINE;
		
		private EntitySet<FATTURA> _FATTURA;
		
		private EntityRef<FORNITORE> _FORNITORE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnP_IVAChanging(string value);
    partial void OnP_IVAChanged();
    partial void OnAnnoChanging(string value);
    partial void OnAnnoChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnData_partenzaChanging(System.DateTime value);
    partial void OnData_partenzaChanged();
    partial void OnLuogo_partenzaChanging(string value);
    partial void OnLuogo_partenzaChanged();
    partial void OnData_consegnaChanging(System.DateTime value);
    partial void OnData_consegnaChanged();
    partial void OnCorriereChanging(string value);
    partial void OnCorriereChanged();
    #endregion
		
		public DDT()
		{
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			this._FATTURA = new EntitySet<FATTURA>(new Action<FATTURA>(this.attach_FATTURA), new Action<FATTURA>(this.detach_FATTURA));
			this._FORNITORE = default(EntityRef<FORNITORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_IVA", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string P_IVA
		{
			get
			{
				return this._P_IVA;
			}
			set
			{
				if ((this._P_IVA != value))
				{
					if (this._FORNITORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP_IVAChanging(value);
					this.SendPropertyChanging();
					this._P_IVA = value;
					this.SendPropertyChanged("P_IVA");
					this.OnP_IVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anno", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Anno
		{
			get
			{
				return this._Anno;
			}
			set
			{
				if ((this._Anno != value))
				{
					this.OnAnnoChanging(value);
					this.SendPropertyChanging();
					this._Anno = value;
					this.SendPropertyChanged("Anno");
					this.OnAnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_partenza", DbType="Date NOT NULL")]
		public System.DateTime Data_partenza
		{
			get
			{
				return this._Data_partenza;
			}
			set
			{
				if ((this._Data_partenza != value))
				{
					this.OnData_partenzaChanging(value);
					this.SendPropertyChanging();
					this._Data_partenza = value;
					this.SendPropertyChanged("Data_partenza");
					this.OnData_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luogo_partenza", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Luogo_partenza
		{
			get
			{
				return this._Luogo_partenza;
			}
			set
			{
				if ((this._Luogo_partenza != value))
				{
					this.OnLuogo_partenzaChanging(value);
					this.SendPropertyChanging();
					this._Luogo_partenza = value;
					this.SendPropertyChanged("Luogo_partenza");
					this.OnLuogo_partenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_consegna", DbType="Date NOT NULL")]
		public System.DateTime Data_consegna
		{
			get
			{
				return this._Data_consegna;
			}
			set
			{
				if ((this._Data_consegna != value))
				{
					this.OnData_consegnaChanging(value);
					this.SendPropertyChanging();
					this._Data_consegna = value;
					this.SendPropertyChanged("Data_consegna");
					this.OnData_consegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corriere", DbType="Char(10)")]
		public string Corriere
		{
			get
			{
				return this._Corriere;
			}
			set
			{
				if ((this._Corriere != value))
				{
					this.OnCorriereChanging(value);
					this.SendPropertyChanging();
					this._Corriere = value;
					this.SendPropertyChanged("Corriere");
					this.OnCorriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DDT_ORDINE", Storage="_ORDINE", ThisKey="P_IVA,Anno,Numero", OtherKey="P_IVA,Anno,Numero")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DDT_FATTURA", Storage="_FATTURA", ThisKey="P_IVA,Anno,Numero", OtherKey="DDT_P_IVA,DDT_Anno,DDT_Numero")]
		public EntitySet<FATTURA> FATTURA
		{
			get
			{
				return this._FATTURA;
			}
			set
			{
				this._FATTURA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_DDT", Storage="_FORNITORE", ThisKey="P_IVA", OtherKey="P_IVA", IsForeignKey=true)]
		public FORNITORE FORNITORE
		{
			get
			{
				return this._FORNITORE.Entity;
			}
			set
			{
				FORNITORE previousValue = this._FORNITORE.Entity;
				if (((previousValue != value) 
							|| (this._FORNITORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORNITORE.Entity = null;
						previousValue.DDT.Remove(this);
					}
					this._FORNITORE.Entity = value;
					if ((value != null))
					{
						value.DDT.Add(this);
						this._P_IVA = value.P_IVA;
					}
					else
					{
						this._P_IVA = default(string);
					}
					this.SendPropertyChanged("FORNITORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.DDT = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.DDT = null;
		}
		
		private void attach_FATTURA(FATTURA entity)
		{
			this.SendPropertyChanging();
			entity.DDT = this;
		}
		
		private void detach_FATTURA(FATTURA entity)
		{
			this.SendPropertyChanging();
			entity.DDT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESECUZIONE_CAMERIERE")]
	public partial class ESECUZIONE_CAMERIERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Fiscale_Cameriere;
		
		private System.DateTime _Data_Turno;
		
		private decimal _Ora_Inizio_Turno;
		
		private decimal _Ora_Fine_Turno;
		
		private EntityRef<CAMERIERE> _CAMERIERE;
		
		private EntityRef<TURNO> _TURNO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_Fiscale_CameriereChanging(string value);
    partial void OnCodice_Fiscale_CameriereChanged();
    partial void OnData_TurnoChanging(System.DateTime value);
    partial void OnData_TurnoChanged();
    partial void OnOra_Inizio_TurnoChanging(decimal value);
    partial void OnOra_Inizio_TurnoChanged();
    partial void OnOra_Fine_TurnoChanging(decimal value);
    partial void OnOra_Fine_TurnoChanged();
    #endregion
		
		public ESECUZIONE_CAMERIERE()
		{
			this._CAMERIERE = default(EntityRef<CAMERIERE>);
			this._TURNO = default(EntityRef<TURNO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale_Cameriere", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale_Cameriere
		{
			get
			{
				return this._Codice_Fiscale_Cameriere;
			}
			set
			{
				if ((this._Codice_Fiscale_Cameriere != value))
				{
					if (this._CAMERIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_Fiscale_CameriereChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale_Cameriere = value;
					this.SendPropertyChanged("Codice_Fiscale_Cameriere");
					this.OnCodice_Fiscale_CameriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Turno", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Turno
		{
			get
			{
				return this._Data_Turno;
			}
			set
			{
				if ((this._Data_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Data_Turno = value;
					this.SendPropertyChanged("Data_Turno");
					this.OnData_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Inizio_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Inizio_Turno
		{
			get
			{
				return this._Ora_Inizio_Turno;
			}
			set
			{
				if ((this._Ora_Inizio_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Inizio_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Inizio_Turno = value;
					this.SendPropertyChanged("Ora_Inizio_Turno");
					this.OnOra_Inizio_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Fine_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Fine_Turno
		{
			get
			{
				return this._Ora_Fine_Turno;
			}
			set
			{
				if ((this._Ora_Fine_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Fine_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Fine_Turno = value;
					this.SendPropertyChanged("Ora_Fine_Turno");
					this.OnOra_Fine_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_ESECUZIONE_CAMERIERE", Storage="_CAMERIERE", ThisKey="Codice_Fiscale_Cameriere", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CAMERIERE CAMERIERE
		{
			get
			{
				return this._CAMERIERE.Entity;
			}
			set
			{
				CAMERIERE previousValue = this._CAMERIERE.Entity;
				if (((previousValue != value) 
							|| (this._CAMERIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAMERIERE.Entity = null;
						previousValue.ESECUZIONE_CAMERIERE.Remove(this);
					}
					this._CAMERIERE.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CAMERIERE.Add(this);
						this._Codice_Fiscale_Cameriere = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale_Cameriere = default(string);
					}
					this.SendPropertyChanged("CAMERIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CAMERIERE", Storage="_TURNO", ThisKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno", OtherKey="Data_Turno,Ora_Inizio,Ora_Fine", IsForeignKey=true)]
		public TURNO TURNO
		{
			get
			{
				return this._TURNO.Entity;
			}
			set
			{
				TURNO previousValue = this._TURNO.Entity;
				if (((previousValue != value) 
							|| (this._TURNO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TURNO.Entity = null;
						previousValue.ESECUZIONE_CAMERIERE.Remove(this);
					}
					this._TURNO.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CAMERIERE.Add(this);
						this._Data_Turno = value.Data_Turno;
						this._Ora_Inizio_Turno = value.Ora_Inizio;
						this._Ora_Fine_Turno = value.Ora_Fine;
					}
					else
					{
						this._Data_Turno = default(System.DateTime);
						this._Ora_Inizio_Turno = default(decimal);
						this._Ora_Fine_Turno = default(decimal);
					}
					this.SendPropertyChanged("TURNO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESECUZIONE_CASSIERE")]
	public partial class ESECUZIONE_CASSIERE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Fiscale_Cassiere;
		
		private System.DateTime _Data_Turno;
		
		private decimal _Ora_Inizio_Turno;
		
		private decimal _Ora_Fine_Turno;
		
		private EntityRef<CASSIERE> _CASSIERE;
		
		private EntityRef<TURNO> _TURNO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_Fiscale_CassiereChanging(string value);
    partial void OnCodice_Fiscale_CassiereChanged();
    partial void OnData_TurnoChanging(System.DateTime value);
    partial void OnData_TurnoChanged();
    partial void OnOra_Inizio_TurnoChanging(decimal value);
    partial void OnOra_Inizio_TurnoChanged();
    partial void OnOra_Fine_TurnoChanging(decimal value);
    partial void OnOra_Fine_TurnoChanged();
    #endregion
		
		public ESECUZIONE_CASSIERE()
		{
			this._CASSIERE = default(EntityRef<CASSIERE>);
			this._TURNO = default(EntityRef<TURNO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale_Cassiere", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale_Cassiere
		{
			get
			{
				return this._Codice_Fiscale_Cassiere;
			}
			set
			{
				if ((this._Codice_Fiscale_Cassiere != value))
				{
					if (this._CASSIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_Fiscale_CassiereChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale_Cassiere = value;
					this.SendPropertyChanged("Codice_Fiscale_Cassiere");
					this.OnCodice_Fiscale_CassiereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Turno", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Turno
		{
			get
			{
				return this._Data_Turno;
			}
			set
			{
				if ((this._Data_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Data_Turno = value;
					this.SendPropertyChanged("Data_Turno");
					this.OnData_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Inizio_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Inizio_Turno
		{
			get
			{
				return this._Ora_Inizio_Turno;
			}
			set
			{
				if ((this._Ora_Inizio_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Inizio_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Inizio_Turno = value;
					this.SendPropertyChanged("Ora_Inizio_Turno");
					this.OnOra_Inizio_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Fine_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Fine_Turno
		{
			get
			{
				return this._Ora_Fine_Turno;
			}
			set
			{
				if ((this._Ora_Fine_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Fine_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Fine_Turno = value;
					this.SendPropertyChanged("Ora_Fine_Turno");
					this.OnOra_Fine_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_ESECUZIONE_CASSIERE", Storage="_CASSIERE", ThisKey="Codice_Fiscale_Cassiere", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CASSIERE CASSIERE
		{
			get
			{
				return this._CASSIERE.Entity;
			}
			set
			{
				CASSIERE previousValue = this._CASSIERE.Entity;
				if (((previousValue != value) 
							|| (this._CASSIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASSIERE.Entity = null;
						previousValue.ESECUZIONE_CASSIERE.Remove(this);
					}
					this._CASSIERE.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CASSIERE.Add(this);
						this._Codice_Fiscale_Cassiere = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale_Cassiere = default(string);
					}
					this.SendPropertyChanged("CASSIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CASSIERE", Storage="_TURNO", ThisKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno", OtherKey="Data_Turno,Ora_Inizio,Ora_Fine", IsForeignKey=true)]
		public TURNO TURNO
		{
			get
			{
				return this._TURNO.Entity;
			}
			set
			{
				TURNO previousValue = this._TURNO.Entity;
				if (((previousValue != value) 
							|| (this._TURNO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TURNO.Entity = null;
						previousValue.ESECUZIONE_CASSIERE.Remove(this);
					}
					this._TURNO.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CASSIERE.Add(this);
						this._Data_Turno = value.Data_Turno;
						this._Ora_Inizio_Turno = value.Ora_Inizio;
						this._Ora_Fine_Turno = value.Ora_Fine;
					}
					else
					{
						this._Data_Turno = default(System.DateTime);
						this._Ora_Inizio_Turno = default(decimal);
						this._Ora_Fine_Turno = default(decimal);
					}
					this.SendPropertyChanged("TURNO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESECUZIONE_CUOCO")]
	public partial class ESECUZIONE_CUOCO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_Turno;
		
		private decimal _Ora_Inizio_Turno;
		
		private decimal _Ora_Fine_Turno;
		
		private string _Codice_Fiscale_Cuoco;
		
		private EntityRef<CUOCO> _CUOCO;
		
		private EntityRef<TURNO> _TURNO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_TurnoChanging(System.DateTime value);
    partial void OnData_TurnoChanged();
    partial void OnOra_Inizio_TurnoChanging(decimal value);
    partial void OnOra_Inizio_TurnoChanged();
    partial void OnOra_Fine_TurnoChanging(decimal value);
    partial void OnOra_Fine_TurnoChanged();
    partial void OnCodice_Fiscale_CuocoChanging(string value);
    partial void OnCodice_Fiscale_CuocoChanged();
    #endregion
		
		public ESECUZIONE_CUOCO()
		{
			this._CUOCO = default(EntityRef<CUOCO>);
			this._TURNO = default(EntityRef<TURNO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Turno", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Turno
		{
			get
			{
				return this._Data_Turno;
			}
			set
			{
				if ((this._Data_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Data_Turno = value;
					this.SendPropertyChanged("Data_Turno");
					this.OnData_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Inizio_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Inizio_Turno
		{
			get
			{
				return this._Ora_Inizio_Turno;
			}
			set
			{
				if ((this._Ora_Inizio_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Inizio_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Inizio_Turno = value;
					this.SendPropertyChanged("Ora_Inizio_Turno");
					this.OnOra_Inizio_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Fine_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Fine_Turno
		{
			get
			{
				return this._Ora_Fine_Turno;
			}
			set
			{
				if ((this._Ora_Fine_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Fine_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Fine_Turno = value;
					this.SendPropertyChanged("Ora_Fine_Turno");
					this.OnOra_Fine_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale_Cuoco", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale_Cuoco
		{
			get
			{
				return this._Codice_Fiscale_Cuoco;
			}
			set
			{
				if ((this._Codice_Fiscale_Cuoco != value))
				{
					if (this._CUOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_Fiscale_CuocoChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale_Cuoco = value;
					this.SendPropertyChanged("Codice_Fiscale_Cuoco");
					this.OnCodice_Fiscale_CuocoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_ESECUZIONE_CUOCO", Storage="_CUOCO", ThisKey="Codice_Fiscale_Cuoco", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CUOCO CUOCO
		{
			get
			{
				return this._CUOCO.Entity;
			}
			set
			{
				CUOCO previousValue = this._CUOCO.Entity;
				if (((previousValue != value) 
							|| (this._CUOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUOCO.Entity = null;
						previousValue.ESECUZIONE_CUOCO.Remove(this);
					}
					this._CUOCO.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CUOCO.Add(this);
						this._Codice_Fiscale_Cuoco = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale_Cuoco = default(string);
					}
					this.SendPropertyChanged("CUOCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_ESECUZIONE_CUOCO", Storage="_TURNO", ThisKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno", OtherKey="Data_Turno,Ora_Inizio,Ora_Fine", IsForeignKey=true)]
		public TURNO TURNO
		{
			get
			{
				return this._TURNO.Entity;
			}
			set
			{
				TURNO previousValue = this._TURNO.Entity;
				if (((previousValue != value) 
							|| (this._TURNO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TURNO.Entity = null;
						previousValue.ESECUZIONE_CUOCO.Remove(this);
					}
					this._TURNO.Entity = value;
					if ((value != null))
					{
						value.ESECUZIONE_CUOCO.Add(this);
						this._Data_Turno = value.Data_Turno;
						this._Ora_Inizio_Turno = value.Ora_Inizio;
						this._Ora_Fine_Turno = value.Ora_Fine;
					}
					else
					{
						this._Data_Turno = default(System.DateTime);
						this._Ora_Inizio_Turno = default(decimal);
						this._Ora_Fine_Turno = default(decimal);
					}
					this.SendPropertyChanged("TURNO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORNITORE")]
	public partial class FORNITORE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _P_IVA;
		
		private string _Nome_Azienda;
		
		private decimal _Telefono;
		
		private string _E_Mail;
		
		private string _Stato;
		
		private EntitySet<DDT> _DDT;
		
		private EntitySet<FATTURA> _FATTURA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnP_IVAChanging(string value);
    partial void OnP_IVAChanged();
    partial void OnNome_AziendaChanging(string value);
    partial void OnNome_AziendaChanged();
    partial void OnTelefonoChanging(decimal value);
    partial void OnTelefonoChanged();
    partial void OnE_MailChanging(string value);
    partial void OnE_MailChanged();
    partial void OnStatoChanging(string value);
    partial void OnStatoChanged();
    #endregion
		
		public FORNITORE()
		{
			this._DDT = new EntitySet<DDT>(new Action<DDT>(this.attach_DDT), new Action<DDT>(this.detach_DDT));
			this._FATTURA = new EntitySet<FATTURA>(new Action<FATTURA>(this.attach_FATTURA), new Action<FATTURA>(this.detach_FATTURA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_IVA", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string P_IVA
		{
			get
			{
				return this._P_IVA;
			}
			set
			{
				if ((this._P_IVA != value))
				{
					this.OnP_IVAChanging(value);
					this.SendPropertyChanging();
					this._P_IVA = value;
					this.SendPropertyChanged("P_IVA");
					this.OnP_IVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome_Azienda", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Nome_Azienda
		{
			get
			{
				return this._Nome_Azienda;
			}
			set
			{
				if ((this._Nome_Azienda != value))
				{
					this.OnNome_AziendaChanging(value);
					this.SendPropertyChanging();
					this._Nome_Azienda = value;
					this.SendPropertyChanged("Nome_Azienda");
					this.OnNome_AziendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Decimal(11,0) NOT NULL")]
		public decimal Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Mail", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string E_Mail
		{
			get
			{
				return this._E_Mail;
			}
			set
			{
				if ((this._E_Mail != value))
				{
					this.OnE_MailChanging(value);
					this.SendPropertyChanging();
					this._E_Mail = value;
					this.SendPropertyChanged("E_Mail");
					this.OnE_MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stato", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Stato
		{
			get
			{
				return this._Stato;
			}
			set
			{
				if ((this._Stato != value))
				{
					this.OnStatoChanging(value);
					this.SendPropertyChanging();
					this._Stato = value;
					this.SendPropertyChanged("Stato");
					this.OnStatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_DDT", Storage="_DDT", ThisKey="P_IVA", OtherKey="P_IVA")]
		public EntitySet<DDT> DDT
		{
			get
			{
				return this._DDT;
			}
			set
			{
				this._DDT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_FATTURA", Storage="_FATTURA", ThisKey="P_IVA", OtherKey="P_IVA")]
		public EntitySet<FATTURA> FATTURA
		{
			get
			{
				return this._FATTURA;
			}
			set
			{
				this._FATTURA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DDT(DDT entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = this;
		}
		
		private void detach_DDT(DDT entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = null;
		}
		
		private void attach_FATTURA(FATTURA entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = this;
		}
		
		private void detach_FATTURA(FATTURA entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRADIMENTO")]
	public partial class GRADIMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_Tavolo;
		
		private System.DateTime _Data_Prenotazione;
		
		private decimal _Ora_Prenotazione;
		
		private System.Nullable<decimal> _Importo_Mancia;
		
		private System.Nullable<decimal> _Livello_di_Gradimento;
		
		private string _Codice_Fiscale;
		
		private EntityRef<CAMERIERE> _CAMERIERE;
		
		private EntityRef<PRENOTAZIONE> _PRENOTAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_TavoloChanging(decimal value);
    partial void OnNumero_TavoloChanged();
    partial void OnData_PrenotazioneChanging(System.DateTime value);
    partial void OnData_PrenotazioneChanged();
    partial void OnOra_PrenotazioneChanging(decimal value);
    partial void OnOra_PrenotazioneChanged();
    partial void OnImporto_ManciaChanging(System.Nullable<decimal> value);
    partial void OnImporto_ManciaChanged();
    partial void OnLivello_di_GradimentoChanging(System.Nullable<decimal> value);
    partial void OnLivello_di_GradimentoChanged();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    #endregion
		
		public GRADIMENTO()
		{
			this._CAMERIERE = default(EntityRef<CAMERIERE>);
			this._PRENOTAZIONE = default(EntityRef<PRENOTAZIONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Tavolo", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_Tavolo
		{
			get
			{
				return this._Numero_Tavolo;
			}
			set
			{
				if ((this._Numero_Tavolo != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_TavoloChanging(value);
					this.SendPropertyChanging();
					this._Numero_Tavolo = value;
					this.SendPropertyChanged("Numero_Tavolo");
					this.OnNumero_TavoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Prenotazione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Prenotazione
		{
			get
			{
				return this._Data_Prenotazione;
			}
			set
			{
				if ((this._Data_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_Prenotazione = value;
					this.SendPropertyChanged("Data_Prenotazione");
					this.OnData_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Prenotazione", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Prenotazione
		{
			get
			{
				return this._Ora_Prenotazione;
			}
			set
			{
				if ((this._Ora_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Ora_Prenotazione = value;
					this.SendPropertyChanged("Ora_Prenotazione");
					this.OnOra_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo_Mancia", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Importo_Mancia
		{
			get
			{
				return this._Importo_Mancia;
			}
			set
			{
				if ((this._Importo_Mancia != value))
				{
					this.OnImporto_ManciaChanging(value);
					this.SendPropertyChanging();
					this._Importo_Mancia = value;
					this.SendPropertyChanged("Importo_Mancia");
					this.OnImporto_ManciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Livello_di_Gradimento", DbType="Decimal(1,0)")]
		public System.Nullable<decimal> Livello_di_Gradimento
		{
			get
			{
				return this._Livello_di_Gradimento;
			}
			set
			{
				if ((this._Livello_di_Gradimento != value))
				{
					this.OnLivello_di_GradimentoChanging(value);
					this.SendPropertyChanging();
					this._Livello_di_Gradimento = value;
					this.SendPropertyChanged("Livello_di_Gradimento");
					this.OnLivello_di_GradimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					if (this._CAMERIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_GRADIMENTO", Storage="_CAMERIERE", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CAMERIERE CAMERIERE
		{
			get
			{
				return this._CAMERIERE.Entity;
			}
			set
			{
				CAMERIERE previousValue = this._CAMERIERE.Entity;
				if (((previousValue != value) 
							|| (this._CAMERIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAMERIERE.Entity = null;
						previousValue.GRADIMENTO.Remove(this);
					}
					this._CAMERIERE.Entity = value;
					if ((value != null))
					{
						value.GRADIMENTO.Add(this);
						this._Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CAMERIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_GRADIMENTO", Storage="_PRENOTAZIONE", ThisKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione", OtherKey="Numero,Data_Prenotazione,Ora", IsForeignKey=true)]
		public PRENOTAZIONE PRENOTAZIONE
		{
			get
			{
				return this._PRENOTAZIONE.Entity;
			}
			set
			{
				PRENOTAZIONE previousValue = this._PRENOTAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONE.Entity = null;
						previousValue.GRADIMENTO = null;
					}
					this._PRENOTAZIONE.Entity = value;
					if ((value != null))
					{
						value.GRADIMENTO = this;
						this._Numero_Tavolo = value.Numero;
						this._Data_Prenotazione = value.Data_Prenotazione;
						this._Ora_Prenotazione = value.Ora;
					}
					else
					{
						this._Numero_Tavolo = default(decimal);
						this._Data_Prenotazione = default(System.DateTime);
						this._Ora_Prenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INGREDIENTE")]
	public partial class INGREDIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private string _Nome;
		
		private decimal _Scorta;
		
		private string _Descrizione;
		
		private EntitySet<ORDINE> _ORDINE;
		
		private EntitySet<REALIZZAZIONE> _REALIZZAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnScortaChanging(decimal value);
    partial void OnScortaChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public INGREDIENTE()
		{
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			this._REALIZZAZIONE = new EntitySet<REALIZZAZIONE>(new Action<REALIZZAZIONE>(this.attach_REALIZZAZIONE), new Action<REALIZZAZIONE>(this.detach_REALIZZAZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scorta", DbType="Decimal(3,0) NOT NULL")]
		public decimal Scorta
		{
			get
			{
				return this._Scorta;
			}
			set
			{
				if ((this._Scorta != value))
				{
					this.OnScortaChanging(value);
					this.SendPropertyChanging();
					this._Scorta = value;
					this.SendPropertyChanged("Scorta");
					this.OnScortaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENTE_ORDINE", Storage="_ORDINE", ThisKey="Codice", OtherKey="Codice_Ingrediente")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENTE_REALIZZAZIONE", Storage="_REALIZZAZIONE", ThisKey="Codice", OtherKey="Codice_Ingrediente")]
		public EntitySet<REALIZZAZIONE> REALIZZAZIONE
		{
			get
			{
				return this._REALIZZAZIONE;
			}
			set
			{
				this._REALIZZAZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENTE = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENTE = null;
		}
		
		private void attach_REALIZZAZIONE(REALIZZAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENTE = this;
		}
		
		private void detach_REALIZZAZIONE(REALIZZAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDINABILE")]
	public partial class ORDINABILE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private string _Nome;
		
		private decimal _Prezzo;
		
		private string _Descrizione;
		
		private string _Tipo;
		
		private EntitySet<REALIZZAZIONE> _REALIZZAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public ORDINABILE()
		{
			this._REALIZZAZIONE = new EntitySet<REALIZZAZIONE>(new Action<REALIZZAZIONE>(this.attach_REALIZZAZIONE), new Action<REALIZZAZIONE>(this.detach_REALIZZAZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Decimal(5,2) NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDINABILE_REALIZZAZIONE", Storage="_REALIZZAZIONE", ThisKey="Codice", OtherKey="Codice_Ordinabile")]
		public EntitySet<REALIZZAZIONE> REALIZZAZIONE
		{
			get
			{
				return this._REALIZZAZIONE;
			}
			set
			{
				this._REALIZZAZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REALIZZAZIONE(REALIZZAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ORDINABILE = this;
		}
		
		private void detach_REALIZZAZIONE(REALIZZAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.ORDINABILE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDINAZIONE")]
	public partial class ORDINAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_Tavolo;
		
		private System.DateTime _Data_Prenotazione;
		
		private decimal _Ora_Prenotazione;
		
		private string _Codice_Ordinabile;
		
		private decimal _Quantità;
		
		private EntityRef<PRENOTAZIONE> _PRENOTAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_TavoloChanging(decimal value);
    partial void OnNumero_TavoloChanged();
    partial void OnData_PrenotazioneChanging(System.DateTime value);
    partial void OnData_PrenotazioneChanged();
    partial void OnOra_PrenotazioneChanging(decimal value);
    partial void OnOra_PrenotazioneChanged();
    partial void OnCodice_OrdinabileChanging(string value);
    partial void OnCodice_OrdinabileChanged();
    partial void OnQuantitàChanging(decimal value);
    partial void OnQuantitàChanged();
    #endregion
		
		public ORDINAZIONE()
		{
			this._PRENOTAZIONE = default(EntityRef<PRENOTAZIONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Tavolo", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_Tavolo
		{
			get
			{
				return this._Numero_Tavolo;
			}
			set
			{
				if ((this._Numero_Tavolo != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_TavoloChanging(value);
					this.SendPropertyChanging();
					this._Numero_Tavolo = value;
					this.SendPropertyChanged("Numero_Tavolo");
					this.OnNumero_TavoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Prenotazione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Prenotazione
		{
			get
			{
				return this._Data_Prenotazione;
			}
			set
			{
				if ((this._Data_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_Prenotazione = value;
					this.SendPropertyChanged("Data_Prenotazione");
					this.OnData_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Prenotazione", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Prenotazione
		{
			get
			{
				return this._Ora_Prenotazione;
			}
			set
			{
				if ((this._Ora_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Ora_Prenotazione = value;
					this.SendPropertyChanged("Ora_Prenotazione");
					this.OnOra_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Ordinabile", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Ordinabile
		{
			get
			{
				return this._Codice_Ordinabile;
			}
			set
			{
				if ((this._Codice_Ordinabile != value))
				{
					this.OnCodice_OrdinabileChanging(value);
					this.SendPropertyChanging();
					this._Codice_Ordinabile = value;
					this.SendPropertyChanged("Codice_Ordinabile");
					this.OnCodice_OrdinabileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Decimal(3,0) NOT NULL")]
		public decimal Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_ORDINAZIONE", Storage="_PRENOTAZIONE", ThisKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione", OtherKey="Numero,Data_Prenotazione,Ora", IsForeignKey=true)]
		public PRENOTAZIONE PRENOTAZIONE
		{
			get
			{
				return this._PRENOTAZIONE.Entity;
			}
			set
			{
				PRENOTAZIONE previousValue = this._PRENOTAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONE.Entity = null;
						previousValue.ORDINAZIONE.Remove(this);
					}
					this._PRENOTAZIONE.Entity = value;
					if ((value != null))
					{
						value.ORDINAZIONE.Add(this);
						this._Numero_Tavolo = value.Numero;
						this._Data_Prenotazione = value.Data_Prenotazione;
						this._Ora_Prenotazione = value.Ora;
					}
					else
					{
						this._Numero_Tavolo = default(decimal);
						this._Data_Prenotazione = default(System.DateTime);
						this._Ora_Prenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDINE")]
	public partial class ORDINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Codice_Ordine;
		
		private decimal _Prezzo_Unitario;
		
		private decimal _Quantità;
		
		private System.DateTime _Data_Ordine;
		
		private string _P_IVA;
		
		private string _Anno;
		
		private string _Numero;
		
		private string _Codice_Ingrediente;
		
		private string _Codice_Fiscale;
		
		private EntityRef<CUOCO> _CUOCO;
		
		private EntityRef<INGREDIENTE> _INGREDIENTE;
		
		private EntityRef<DDT> _DDT;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_OrdineChanging(decimal value);
    partial void OnCodice_OrdineChanged();
    partial void OnPrezzo_UnitarioChanging(decimal value);
    partial void OnPrezzo_UnitarioChanged();
    partial void OnQuantitàChanging(decimal value);
    partial void OnQuantitàChanged();
    partial void OnData_OrdineChanging(System.DateTime value);
    partial void OnData_OrdineChanged();
    partial void OnP_IVAChanging(string value);
    partial void OnP_IVAChanged();
    partial void OnAnnoChanging(string value);
    partial void OnAnnoChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnCodice_IngredienteChanging(string value);
    partial void OnCodice_IngredienteChanged();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    #endregion
		
		public ORDINE()
		{
			this._CUOCO = default(EntityRef<CUOCO>);
			this._INGREDIENTE = default(EntityRef<INGREDIENTE>);
			this._DDT = default(EntityRef<DDT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Ordine", DbType="Decimal(10,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Codice_Ordine
		{
			get
			{
				return this._Codice_Ordine;
			}
			set
			{
				if ((this._Codice_Ordine != value))
				{
					this.OnCodice_OrdineChanging(value);
					this.SendPropertyChanging();
					this._Codice_Ordine = value;
					this.SendPropertyChanged("Codice_Ordine");
					this.OnCodice_OrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo_Unitario", DbType="Decimal(6,2) NOT NULL")]
		public decimal Prezzo_Unitario
		{
			get
			{
				return this._Prezzo_Unitario;
			}
			set
			{
				if ((this._Prezzo_Unitario != value))
				{
					this.OnPrezzo_UnitarioChanging(value);
					this.SendPropertyChanging();
					this._Prezzo_Unitario = value;
					this.SendPropertyChanged("Prezzo_Unitario");
					this.OnPrezzo_UnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Decimal(2,0) NOT NULL")]
		public decimal Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Ordine", DbType="Date NOT NULL")]
		public System.DateTime Data_Ordine
		{
			get
			{
				return this._Data_Ordine;
			}
			set
			{
				if ((this._Data_Ordine != value))
				{
					this.OnData_OrdineChanging(value);
					this.SendPropertyChanging();
					this._Data_Ordine = value;
					this.SendPropertyChanged("Data_Ordine");
					this.OnData_OrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_IVA", DbType="VarChar(11)")]
		public string P_IVA
		{
			get
			{
				return this._P_IVA;
			}
			set
			{
				if ((this._P_IVA != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP_IVAChanging(value);
					this.SendPropertyChanging();
					this._P_IVA = value;
					this.SendPropertyChanged("P_IVA");
					this.OnP_IVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anno", DbType="Char(4)")]
		public string Anno
		{
			get
			{
				return this._Anno;
			}
			set
			{
				if ((this._Anno != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnnoChanging(value);
					this.SendPropertyChanging();
					this._Anno = value;
					this.SendPropertyChanged("Anno");
					this.OnAnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Char(3)")]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Ingrediente", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Codice_Ingrediente
		{
			get
			{
				return this._Codice_Ingrediente;
			}
			set
			{
				if ((this._Codice_Ingrediente != value))
				{
					if (this._INGREDIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_IngredienteChanging(value);
					this.SendPropertyChanging();
					this._Codice_Ingrediente = value;
					this.SendPropertyChanged("Codice_Ingrediente");
					this.OnCodice_IngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					if (this._CUOCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUOCO_ORDINE", Storage="_CUOCO", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CUOCO CUOCO
		{
			get
			{
				return this._CUOCO.Entity;
			}
			set
			{
				CUOCO previousValue = this._CUOCO.Entity;
				if (((previousValue != value) 
							|| (this._CUOCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUOCO.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._CUOCO.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CUOCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENTE_ORDINE", Storage="_INGREDIENTE", ThisKey="Codice_Ingrediente", OtherKey="Codice", IsForeignKey=true)]
		public INGREDIENTE INGREDIENTE
		{
			get
			{
				return this._INGREDIENTE.Entity;
			}
			set
			{
				INGREDIENTE previousValue = this._INGREDIENTE.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENTE.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._INGREDIENTE.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._Codice_Ingrediente = value.Codice;
					}
					else
					{
						this._Codice_Ingrediente = default(string);
					}
					this.SendPropertyChanged("INGREDIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DDT_ORDINE", Storage="_DDT", ThisKey="P_IVA,Anno,Numero", OtherKey="P_IVA,Anno,Numero", IsForeignKey=true)]
		public DDT DDT
		{
			get
			{
				return this._DDT.Entity;
			}
			set
			{
				DDT previousValue = this._DDT.Entity;
				if (((previousValue != value) 
							|| (this._DDT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DDT.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._DDT.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._P_IVA = value.P_IVA;
						this._Anno = value.Anno;
						this._Numero = value.Numero;
					}
					else
					{
						this._P_IVA = default(string);
						this._Anno = default(string);
						this._Numero = default(string);
					}
					this.SendPropertyChanged("DDT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGAMENTO")]
	public partial class PAGAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_Tavolo;
		
		private System.DateTime _Data_Prenotazione;
		
		private decimal _Ora_Prenotazione;
		
		private System.DateTime _Data_Scontrino;
		
		private decimal _Numero_Scontrino;
		
		private string _Metodo_di_Pagamento;
		
		private EntityRef<PRENOTAZIONE> _PRENOTAZIONE;
		
		private EntityRef<SCONTRINO> _SCONTRINO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_TavoloChanging(decimal value);
    partial void OnNumero_TavoloChanged();
    partial void OnData_PrenotazioneChanging(System.DateTime value);
    partial void OnData_PrenotazioneChanged();
    partial void OnOra_PrenotazioneChanging(decimal value);
    partial void OnOra_PrenotazioneChanged();
    partial void OnData_ScontrinoChanging(System.DateTime value);
    partial void OnData_ScontrinoChanged();
    partial void OnNumero_ScontrinoChanging(decimal value);
    partial void OnNumero_ScontrinoChanged();
    partial void OnMetodo_di_PagamentoChanging(string value);
    partial void OnMetodo_di_PagamentoChanged();
    #endregion
		
		public PAGAMENTO()
		{
			this._PRENOTAZIONE = default(EntityRef<PRENOTAZIONE>);
			this._SCONTRINO = default(EntityRef<SCONTRINO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Tavolo", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_Tavolo
		{
			get
			{
				return this._Numero_Tavolo;
			}
			set
			{
				if ((this._Numero_Tavolo != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_TavoloChanging(value);
					this.SendPropertyChanging();
					this._Numero_Tavolo = value;
					this.SendPropertyChanged("Numero_Tavolo");
					this.OnNumero_TavoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Prenotazione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Prenotazione
		{
			get
			{
				return this._Data_Prenotazione;
			}
			set
			{
				if ((this._Data_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_Prenotazione = value;
					this.SendPropertyChanged("Data_Prenotazione");
					this.OnData_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Prenotazione", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Prenotazione
		{
			get
			{
				return this._Ora_Prenotazione;
			}
			set
			{
				if ((this._Ora_Prenotazione != value))
				{
					if (this._PRENOTAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Ora_Prenotazione = value;
					this.SendPropertyChanged("Ora_Prenotazione");
					this.OnOra_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Scontrino", DbType="Date NOT NULL")]
		public System.DateTime Data_Scontrino
		{
			get
			{
				return this._Data_Scontrino;
			}
			set
			{
				if ((this._Data_Scontrino != value))
				{
					if (this._SCONTRINO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_ScontrinoChanging(value);
					this.SendPropertyChanging();
					this._Data_Scontrino = value;
					this.SendPropertyChanged("Data_Scontrino");
					this.OnData_ScontrinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Scontrino", DbType="Decimal(3,0) NOT NULL")]
		public decimal Numero_Scontrino
		{
			get
			{
				return this._Numero_Scontrino;
			}
			set
			{
				if ((this._Numero_Scontrino != value))
				{
					if (this._SCONTRINO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_ScontrinoChanging(value);
					this.SendPropertyChanging();
					this._Numero_Scontrino = value;
					this.SendPropertyChanged("Numero_Scontrino");
					this.OnNumero_ScontrinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metodo_di_Pagamento", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Metodo_di_Pagamento
		{
			get
			{
				return this._Metodo_di_Pagamento;
			}
			set
			{
				if ((this._Metodo_di_Pagamento != value))
				{
					this.OnMetodo_di_PagamentoChanging(value);
					this.SendPropertyChanging();
					this._Metodo_di_Pagamento = value;
					this.SendPropertyChanged("Metodo_di_Pagamento");
					this.OnMetodo_di_PagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_PAGAMENTO", Storage="_PRENOTAZIONE", ThisKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione", OtherKey="Numero,Data_Prenotazione,Ora", IsForeignKey=true)]
		public PRENOTAZIONE PRENOTAZIONE
		{
			get
			{
				return this._PRENOTAZIONE.Entity;
			}
			set
			{
				PRENOTAZIONE previousValue = this._PRENOTAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._PRENOTAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRENOTAZIONE.Entity = null;
						previousValue.PAGAMENTO = null;
					}
					this._PRENOTAZIONE.Entity = value;
					if ((value != null))
					{
						value.PAGAMENTO = this;
						this._Numero_Tavolo = value.Numero;
						this._Data_Prenotazione = value.Data_Prenotazione;
						this._Ora_Prenotazione = value.Ora;
					}
					else
					{
						this._Numero_Tavolo = default(decimal);
						this._Data_Prenotazione = default(System.DateTime);
						this._Ora_Prenotazione = default(decimal);
					}
					this.SendPropertyChanged("PRENOTAZIONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCONTRINO_PAGAMENTO", Storage="_SCONTRINO", ThisKey="Data_Scontrino,Numero_Scontrino", OtherKey="Data_Scontrino,Numero", IsForeignKey=true)]
		public SCONTRINO SCONTRINO
		{
			get
			{
				return this._SCONTRINO.Entity;
			}
			set
			{
				SCONTRINO previousValue = this._SCONTRINO.Entity;
				if (((previousValue != value) 
							|| (this._SCONTRINO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SCONTRINO.Entity = null;
						previousValue.PAGAMENTO.Remove(this);
					}
					this._SCONTRINO.Entity = value;
					if ((value != null))
					{
						value.PAGAMENTO.Add(this);
						this._Data_Scontrino = value.Data_Scontrino;
						this._Numero_Scontrino = value.Numero;
					}
					else
					{
						this._Data_Scontrino = default(System.DateTime);
						this._Numero_Scontrino = default(decimal);
					}
					this.SendPropertyChanged("SCONTRINO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRENOTAZIONE")]
	public partial class PRENOTAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero;
		
		private System.DateTime _Data_Prenotazione;
		
		private decimal _Ora;
		
		private decimal _Numero_Persone;
		
		private decimal _Numero_di_Telefono;
		
		private EntityRef<GRADIMENTO> _GRADIMENTO;
		
		private EntitySet<ORDINAZIONE> _ORDINAZIONE;
		
		private EntityRef<PAGAMENTO> _PAGAMENTO;
		
		private EntityRef<CLIENTE> _CLIENTE;
		
		private EntityRef<TAVOLO> _TAVOLO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnData_PrenotazioneChanging(System.DateTime value);
    partial void OnData_PrenotazioneChanged();
    partial void OnOraChanging(decimal value);
    partial void OnOraChanged();
    partial void OnNumero_PersoneChanging(decimal value);
    partial void OnNumero_PersoneChanged();
    partial void OnNumero_di_TelefonoChanging(decimal value);
    partial void OnNumero_di_TelefonoChanged();
    #endregion
		
		public PRENOTAZIONE()
		{
			this._GRADIMENTO = default(EntityRef<GRADIMENTO>);
			this._ORDINAZIONE = new EntitySet<ORDINAZIONE>(new Action<ORDINAZIONE>(this.attach_ORDINAZIONE), new Action<ORDINAZIONE>(this.detach_ORDINAZIONE));
			this._PAGAMENTO = default(EntityRef<PAGAMENTO>);
			this._CLIENTE = default(EntityRef<CLIENTE>);
			this._TAVOLO = default(EntityRef<TAVOLO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					if (this._TAVOLO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Prenotazione", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Prenotazione
		{
			get
			{
				return this._Data_Prenotazione;
			}
			set
			{
				if ((this._Data_Prenotazione != value))
				{
					this.OnData_PrenotazioneChanging(value);
					this.SendPropertyChanging();
					this._Data_Prenotazione = value;
					this.SendPropertyChanged("Data_Prenotazione");
					this.OnData_PrenotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Persone", DbType="Decimal(3,0) NOT NULL")]
		public decimal Numero_Persone
		{
			get
			{
				return this._Numero_Persone;
			}
			set
			{
				if ((this._Numero_Persone != value))
				{
					this.OnNumero_PersoneChanging(value);
					this.SendPropertyChanging();
					this._Numero_Persone = value;
					this.SendPropertyChanged("Numero_Persone");
					this.OnNumero_PersoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_di_Telefono", DbType="Decimal(11,0) NOT NULL")]
		public decimal Numero_di_Telefono
		{
			get
			{
				return this._Numero_di_Telefono;
			}
			set
			{
				if ((this._Numero_di_Telefono != value))
				{
					if (this._CLIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_di_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._Numero_di_Telefono = value;
					this.SendPropertyChanged("Numero_di_Telefono");
					this.OnNumero_di_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_GRADIMENTO", Storage="_GRADIMENTO", ThisKey="Numero,Data_Prenotazione,Ora", OtherKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione", IsUnique=true, IsForeignKey=false)]
		public GRADIMENTO GRADIMENTO
		{
			get
			{
				return this._GRADIMENTO.Entity;
			}
			set
			{
				GRADIMENTO previousValue = this._GRADIMENTO.Entity;
				if (((previousValue != value) 
							|| (this._GRADIMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRADIMENTO.Entity = null;
						previousValue.PRENOTAZIONE = null;
					}
					this._GRADIMENTO.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONE = this;
					}
					this.SendPropertyChanged("GRADIMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_ORDINAZIONE", Storage="_ORDINAZIONE", ThisKey="Numero,Data_Prenotazione,Ora", OtherKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione")]
		public EntitySet<ORDINAZIONE> ORDINAZIONE
		{
			get
			{
				return this._ORDINAZIONE;
			}
			set
			{
				this._ORDINAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRENOTAZIONE_PAGAMENTO", Storage="_PAGAMENTO", ThisKey="Numero,Data_Prenotazione,Ora", OtherKey="Numero_Tavolo,Data_Prenotazione,Ora_Prenotazione", IsUnique=true, IsForeignKey=false)]
		public PAGAMENTO PAGAMENTO
		{
			get
			{
				return this._PAGAMENTO.Entity;
			}
			set
			{
				PAGAMENTO previousValue = this._PAGAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._PAGAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PAGAMENTO.Entity = null;
						previousValue.PRENOTAZIONE = null;
					}
					this._PAGAMENTO.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONE = this;
					}
					this.SendPropertyChanged("PAGAMENTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_PRENOTAZIONE", Storage="_CLIENTE", ThisKey="Numero_di_Telefono", OtherKey="Numero_di_Telefono", IsForeignKey=true)]
		public CLIENTE CLIENTE
		{
			get
			{
				return this._CLIENTE.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE.Entity = null;
						previousValue.PRENOTAZIONE.Remove(this);
					}
					this._CLIENTE.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONE.Add(this);
						this._Numero_di_Telefono = value.Numero_di_Telefono;
					}
					else
					{
						this._Numero_di_Telefono = default(decimal);
					}
					this.SendPropertyChanged("CLIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAVOLO_PRENOTAZIONE", Storage="_TAVOLO", ThisKey="Numero", OtherKey="Numero_Tavolo", IsForeignKey=true)]
		public TAVOLO TAVOLO
		{
			get
			{
				return this._TAVOLO.Entity;
			}
			set
			{
				TAVOLO previousValue = this._TAVOLO.Entity;
				if (((previousValue != value) 
							|| (this._TAVOLO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAVOLO.Entity = null;
						previousValue.PRENOTAZIONE.Remove(this);
					}
					this._TAVOLO.Entity = value;
					if ((value != null))
					{
						value.PRENOTAZIONE.Add(this);
						this._Numero = value.Numero_Tavolo;
					}
					else
					{
						this._Numero = default(decimal);
					}
					this.SendPropertyChanged("TAVOLO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINAZIONE(ORDINAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONE = this;
		}
		
		private void detach_ORDINAZIONE(ORDINAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.PRENOTAZIONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REALIZZAZIONE")]
	public partial class REALIZZAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice_Ordinabile;
		
		private string _Codice_Ingrediente;
		
		private EntityRef<INGREDIENTE> _INGREDIENTE;
		
		private EntityRef<ORDINABILE> _ORDINABILE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodice_OrdinabileChanging(string value);
    partial void OnCodice_OrdinabileChanged();
    partial void OnCodice_IngredienteChanging(string value);
    partial void OnCodice_IngredienteChanged();
    #endregion
		
		public REALIZZAZIONE()
		{
			this._INGREDIENTE = default(EntityRef<INGREDIENTE>);
			this._ORDINABILE = default(EntityRef<ORDINABILE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Ordinabile", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Ordinabile
		{
			get
			{
				return this._Codice_Ordinabile;
			}
			set
			{
				if ((this._Codice_Ordinabile != value))
				{
					if (this._ORDINABILE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_OrdinabileChanging(value);
					this.SendPropertyChanging();
					this._Codice_Ordinabile = value;
					this.SendPropertyChanged("Codice_Ordinabile");
					this.OnCodice_OrdinabileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Ingrediente", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Ingrediente
		{
			get
			{
				return this._Codice_Ingrediente;
			}
			set
			{
				if ((this._Codice_Ingrediente != value))
				{
					if (this._INGREDIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_IngredienteChanging(value);
					this.SendPropertyChanging();
					this._Codice_Ingrediente = value;
					this.SendPropertyChanged("Codice_Ingrediente");
					this.OnCodice_IngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENTE_REALIZZAZIONE", Storage="_INGREDIENTE", ThisKey="Codice_Ingrediente", OtherKey="Codice", IsForeignKey=true)]
		public INGREDIENTE INGREDIENTE
		{
			get
			{
				return this._INGREDIENTE.Entity;
			}
			set
			{
				INGREDIENTE previousValue = this._INGREDIENTE.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENTE.Entity = null;
						previousValue.REALIZZAZIONE.Remove(this);
					}
					this._INGREDIENTE.Entity = value;
					if ((value != null))
					{
						value.REALIZZAZIONE.Add(this);
						this._Codice_Ingrediente = value.Codice;
					}
					else
					{
						this._Codice_Ingrediente = default(string);
					}
					this.SendPropertyChanged("INGREDIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDINABILE_REALIZZAZIONE", Storage="_ORDINABILE", ThisKey="Codice_Ordinabile", OtherKey="Codice", IsForeignKey=true)]
		public ORDINABILE ORDINABILE
		{
			get
			{
				return this._ORDINABILE.Entity;
			}
			set
			{
				ORDINABILE previousValue = this._ORDINABILE.Entity;
				if (((previousValue != value) 
							|| (this._ORDINABILE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDINABILE.Entity = null;
						previousValue.REALIZZAZIONE.Remove(this);
					}
					this._ORDINABILE.Entity = value;
					if ((value != null))
					{
						value.REALIZZAZIONE.Add(this);
						this._Codice_Ordinabile = value.Codice;
					}
					else
					{
						this._Codice_Ordinabile = default(string);
					}
					this.SendPropertyChanged("ORDINABILE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SCONTRINO")]
	public partial class SCONTRINO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data_Scontrino;
		
		private decimal _Numero;
		
		private decimal _Ora;
		
		private decimal _Totale;
		
		private decimal _Coperto;
		
		private string _Codice_Fiscale;
		
		private EntitySet<PAGAMENTO> _PAGAMENTO;
		
		private EntityRef<CASSIERE> _CASSIERE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnData_ScontrinoChanging(System.DateTime value);
    partial void OnData_ScontrinoChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnOraChanging(decimal value);
    partial void OnOraChanged();
    partial void OnTotaleChanging(decimal value);
    partial void OnTotaleChanged();
    partial void OnCopertoChanging(decimal value);
    partial void OnCopertoChanged();
    partial void OnCodice_FiscaleChanging(string value);
    partial void OnCodice_FiscaleChanged();
    #endregion
		
		public SCONTRINO()
		{
			this._PAGAMENTO = new EntitySet<PAGAMENTO>(new Action<PAGAMENTO>(this.attach_PAGAMENTO), new Action<PAGAMENTO>(this.detach_PAGAMENTO));
			this._CASSIERE = default(EntityRef<CASSIERE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Scontrino", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Scontrino
		{
			get
			{
				return this._Data_Scontrino;
			}
			set
			{
				if ((this._Data_Scontrino != value))
				{
					this.OnData_ScontrinoChanging(value);
					this.SendPropertyChanging();
					this._Data_Scontrino = value;
					this.SendPropertyChanged("Data_Scontrino");
					this.OnData_ScontrinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora", DbType="Decimal(4,2) NOT NULL")]
		public decimal Ora
		{
			get
			{
				return this._Ora;
			}
			set
			{
				if ((this._Ora != value))
				{
					this.OnOraChanging(value);
					this.SendPropertyChanging();
					this._Ora = value;
					this.SendPropertyChanged("Ora");
					this.OnOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Totale", DbType="Decimal(6,2) NOT NULL")]
		public decimal Totale
		{
			get
			{
				return this._Totale;
			}
			set
			{
				if ((this._Totale != value))
				{
					this.OnTotaleChanging(value);
					this.SendPropertyChanging();
					this._Totale = value;
					this.SendPropertyChanged("Totale");
					this.OnTotaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coperto", DbType="Decimal(4,2) NOT NULL")]
		public decimal Coperto
		{
			get
			{
				return this._Coperto;
			}
			set
			{
				if ((this._Coperto != value))
				{
					this.OnCopertoChanging(value);
					this.SendPropertyChanging();
					this._Coperto = value;
					this.SendPropertyChanged("Coperto");
					this.OnCopertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string Codice_Fiscale
		{
			get
			{
				return this._Codice_Fiscale;
			}
			set
			{
				if ((this._Codice_Fiscale != value))
				{
					if (this._CASSIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_FiscaleChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale = value;
					this.SendPropertyChanged("Codice_Fiscale");
					this.OnCodice_FiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SCONTRINO_PAGAMENTO", Storage="_PAGAMENTO", ThisKey="Data_Scontrino,Numero", OtherKey="Data_Scontrino,Numero_Scontrino")]
		public EntitySet<PAGAMENTO> PAGAMENTO
		{
			get
			{
				return this._PAGAMENTO;
			}
			set
			{
				this._PAGAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASSIERE_SCONTRINO", Storage="_CASSIERE", ThisKey="Codice_Fiscale", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CASSIERE CASSIERE
		{
			get
			{
				return this._CASSIERE.Entity;
			}
			set
			{
				CASSIERE previousValue = this._CASSIERE.Entity;
				if (((previousValue != value) 
							|| (this._CASSIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASSIERE.Entity = null;
						previousValue.SCONTRINO.Remove(this);
					}
					this._CASSIERE.Entity = value;
					if ((value != null))
					{
						value.SCONTRINO.Add(this);
						this._Codice_Fiscale = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale = default(string);
					}
					this.SendPropertyChanged("CASSIERE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PAGAMENTO(PAGAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SCONTRINO = this;
		}
		
		private void detach_PAGAMENTO(PAGAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SCONTRINO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERVIZIO")]
	public partial class SERVIZIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_Tavolo;
		
		private string _Codice_Fiscale_Cameriere;
		
		private System.DateTime _Data_Turno;
		
		private decimal _Ora_Inizio_Turno;
		
		private decimal _Ora_Fine_Turno;
		
		private EntityRef<CAMERIERE> _CAMERIERE;
		
		private EntityRef<TURNO> _TURNO;
		
		private EntityRef<TAVOLO> _TAVOLO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_TavoloChanging(decimal value);
    partial void OnNumero_TavoloChanged();
    partial void OnCodice_Fiscale_CameriereChanging(string value);
    partial void OnCodice_Fiscale_CameriereChanged();
    partial void OnData_TurnoChanging(System.DateTime value);
    partial void OnData_TurnoChanged();
    partial void OnOra_Inizio_TurnoChanging(decimal value);
    partial void OnOra_Inizio_TurnoChanged();
    partial void OnOra_Fine_TurnoChanging(decimal value);
    partial void OnOra_Fine_TurnoChanged();
    #endregion
		
		public SERVIZIO()
		{
			this._CAMERIERE = default(EntityRef<CAMERIERE>);
			this._TURNO = default(EntityRef<TURNO>);
			this._TAVOLO = default(EntityRef<TAVOLO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Tavolo", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_Tavolo
		{
			get
			{
				return this._Numero_Tavolo;
			}
			set
			{
				if ((this._Numero_Tavolo != value))
				{
					if (this._TAVOLO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumero_TavoloChanging(value);
					this.SendPropertyChanging();
					this._Numero_Tavolo = value;
					this.SendPropertyChanged("Numero_Tavolo");
					this.OnNumero_TavoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice_Fiscale_Cameriere", DbType="Char(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice_Fiscale_Cameriere
		{
			get
			{
				return this._Codice_Fiscale_Cameriere;
			}
			set
			{
				if ((this._Codice_Fiscale_Cameriere != value))
				{
					if (this._CAMERIERE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodice_Fiscale_CameriereChanging(value);
					this.SendPropertyChanging();
					this._Codice_Fiscale_Cameriere = value;
					this.SendPropertyChanged("Codice_Fiscale_Cameriere");
					this.OnCodice_Fiscale_CameriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Turno", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data_Turno
		{
			get
			{
				return this._Data_Turno;
			}
			set
			{
				if ((this._Data_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnData_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Data_Turno = value;
					this.SendPropertyChanged("Data_Turno");
					this.OnData_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Inizio_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Inizio_Turno
		{
			get
			{
				return this._Ora_Inizio_Turno;
			}
			set
			{
				if ((this._Ora_Inizio_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Inizio_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Inizio_Turno = value;
					this.SendPropertyChanged("Ora_Inizio_Turno");
					this.OnOra_Inizio_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ora_Fine_Turno", DbType="Decimal(4,2) NOT NULL", IsPrimaryKey=true)]
		public decimal Ora_Fine_Turno
		{
			get
			{
				return this._Ora_Fine_Turno;
			}
			set
			{
				if ((this._Ora_Fine_Turno != value))
				{
					if (this._TURNO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOra_Fine_TurnoChanging(value);
					this.SendPropertyChanging();
					this._Ora_Fine_Turno = value;
					this.SendPropertyChanged("Ora_Fine_Turno");
					this.OnOra_Fine_TurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAMERIERE_SERVIZIO", Storage="_CAMERIERE", ThisKey="Codice_Fiscale_Cameriere", OtherKey="Codice_Fiscale", IsForeignKey=true)]
		public CAMERIERE CAMERIERE
		{
			get
			{
				return this._CAMERIERE.Entity;
			}
			set
			{
				CAMERIERE previousValue = this._CAMERIERE.Entity;
				if (((previousValue != value) 
							|| (this._CAMERIERE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAMERIERE.Entity = null;
						previousValue.SERVIZIO.Remove(this);
					}
					this._CAMERIERE.Entity = value;
					if ((value != null))
					{
						value.SERVIZIO.Add(this);
						this._Codice_Fiscale_Cameriere = value.Codice_Fiscale;
					}
					else
					{
						this._Codice_Fiscale_Cameriere = default(string);
					}
					this.SendPropertyChanged("CAMERIERE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TURNO_SERVIZIO", Storage="_TURNO", ThisKey="Data_Turno,Ora_Inizio_Turno,Ora_Fine_Turno", OtherKey="Data_Turno,Ora_Inizio,Ora_Fine", IsForeignKey=true)]
		public TURNO TURNO
		{
			get
			{
				return this._TURNO.Entity;
			}
			set
			{
				TURNO previousValue = this._TURNO.Entity;
				if (((previousValue != value) 
							|| (this._TURNO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TURNO.Entity = null;
						previousValue.SERVIZIO.Remove(this);
					}
					this._TURNO.Entity = value;
					if ((value != null))
					{
						value.SERVIZIO.Add(this);
						this._Data_Turno = value.Data_Turno;
						this._Ora_Inizio_Turno = value.Ora_Inizio;
						this._Ora_Fine_Turno = value.Ora_Fine;
					}
					else
					{
						this._Data_Turno = default(System.DateTime);
						this._Ora_Inizio_Turno = default(decimal);
						this._Ora_Fine_Turno = default(decimal);
					}
					this.SendPropertyChanged("TURNO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAVOLO_SERVIZIO", Storage="_TAVOLO", ThisKey="Numero_Tavolo", OtherKey="Numero_Tavolo", IsForeignKey=true)]
		public TAVOLO TAVOLO
		{
			get
			{
				return this._TAVOLO.Entity;
			}
			set
			{
				TAVOLO previousValue = this._TAVOLO.Entity;
				if (((previousValue != value) 
							|| (this._TAVOLO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAVOLO.Entity = null;
						previousValue.SERVIZIO.Remove(this);
					}
					this._TAVOLO.Entity = value;
					if ((value != null))
					{
						value.SERVIZIO.Add(this);
						this._Numero_Tavolo = value.Numero_Tavolo;
					}
					else
					{
						this._Numero_Tavolo = default(decimal);
					}
					this.SendPropertyChanged("TAVOLO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAVOLO")]
	public partial class TAVOLO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero_Tavolo;
		
		private decimal _Numero_Posti;
		
		private string _Descrizione;
		
		private EntitySet<PRENOTAZIONE> _PRENOTAZIONE;
		
		private EntitySet<SERVIZIO> _SERVIZIO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_TavoloChanging(decimal value);
    partial void OnNumero_TavoloChanged();
    partial void OnNumero_PostiChanging(decimal value);
    partial void OnNumero_PostiChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public TAVOLO()
		{
			this._PRENOTAZIONE = new EntitySet<PRENOTAZIONE>(new Action<PRENOTAZIONE>(this.attach_PRENOTAZIONE), new Action<PRENOTAZIONE>(this.detach_PRENOTAZIONE));
			this._SERVIZIO = new EntitySet<SERVIZIO>(new Action<SERVIZIO>(this.attach_SERVIZIO), new Action<SERVIZIO>(this.detach_SERVIZIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Tavolo", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero_Tavolo
		{
			get
			{
				return this._Numero_Tavolo;
			}
			set
			{
				if ((this._Numero_Tavolo != value))
				{
					this.OnNumero_TavoloChanging(value);
					this.SendPropertyChanging();
					this._Numero_Tavolo = value;
					this.SendPropertyChanged("Numero_Tavolo");
					this.OnNumero_TavoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Posti", DbType="Decimal(3,0) NOT NULL")]
		public decimal Numero_Posti
		{
			get
			{
				return this._Numero_Posti;
			}
			set
			{
				if ((this._Numero_Posti != value))
				{
					this.OnNumero_PostiChanging(value);
					this.SendPropertyChanging();
					this._Numero_Posti = value;
					this.SendPropertyChanged("Numero_Posti");
					this.OnNumero_PostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAVOLO_PRENOTAZIONE", Storage="_PRENOTAZIONE", ThisKey="Numero_Tavolo", OtherKey="Numero")]
		public EntitySet<PRENOTAZIONE> PRENOTAZIONE
		{
			get
			{
				return this._PRENOTAZIONE;
			}
			set
			{
				this._PRENOTAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAVOLO_SERVIZIO", Storage="_SERVIZIO", ThisKey="Numero_Tavolo", OtherKey="Numero_Tavolo")]
		public EntitySet<SERVIZIO> SERVIZIO
		{
			get
			{
				return this._SERVIZIO;
			}
			set
			{
				this._SERVIZIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRENOTAZIONE(PRENOTAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.TAVOLO = this;
		}
		
		private void detach_PRENOTAZIONE(PRENOTAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.TAVOLO = null;
		}
		
		private void attach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.TAVOLO = this;
		}
		
		private void detach_SERVIZIO(SERVIZIO entity)
		{
			this.SendPropertyChanging();
			entity.TAVOLO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FATTURA")]
	public partial class FATTURA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _P_IVA;
		
		private decimal _Anno;
		
		private decimal _Numero;
		
		private string _DDT_P_IVA;
		
		private string _DDT_Anno;
		
		private string _DDT_Numero;
		
		private decimal _Importo_Netto;
		
		private decimal _IVA;
		
		private string _Pagata;
		
		private System.DateTime _Data_Fattura;
		
		private EntityRef<FORNITORE> _FORNITORE;
		
		private EntityRef<DDT> _DDT;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnP_IVAChanging(string value);
    partial void OnP_IVAChanged();
    partial void OnAnnoChanging(decimal value);
    partial void OnAnnoChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnDDT_P_IVAChanging(string value);
    partial void OnDDT_P_IVAChanged();
    partial void OnDDT_AnnoChanging(string value);
    partial void OnDDT_AnnoChanged();
    partial void OnDDT_NumeroChanging(string value);
    partial void OnDDT_NumeroChanged();
    partial void OnImporto_NettoChanging(decimal value);
    partial void OnImporto_NettoChanged();
    partial void OnIVAChanging(decimal value);
    partial void OnIVAChanged();
    partial void OnPagataChanging(string value);
    partial void OnPagataChanged();
    partial void OnData_FatturaChanging(System.DateTime value);
    partial void OnData_FatturaChanged();
    #endregion
		
		public FATTURA()
		{
			this._FORNITORE = default(EntityRef<FORNITORE>);
			this._DDT = default(EntityRef<DDT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_IVA", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string P_IVA
		{
			get
			{
				return this._P_IVA;
			}
			set
			{
				if ((this._P_IVA != value))
				{
					if (this._FORNITORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP_IVAChanging(value);
					this.SendPropertyChanging();
					this._P_IVA = value;
					this.SendPropertyChanged("P_IVA");
					this.OnP_IVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anno", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Anno
		{
			get
			{
				return this._Anno;
			}
			set
			{
				if ((this._Anno != value))
				{
					this.OnAnnoChanging(value);
					this.SendPropertyChanging();
					this._Anno = value;
					this.SendPropertyChanged("Anno");
					this.OnAnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(5,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDT_P_IVA", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string DDT_P_IVA
		{
			get
			{
				return this._DDT_P_IVA;
			}
			set
			{
				if ((this._DDT_P_IVA != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDT_P_IVAChanging(value);
					this.SendPropertyChanging();
					this._DDT_P_IVA = value;
					this.SendPropertyChanged("DDT_P_IVA");
					this.OnDDT_P_IVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDT_Anno", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string DDT_Anno
		{
			get
			{
				return this._DDT_Anno;
			}
			set
			{
				if ((this._DDT_Anno != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDT_AnnoChanging(value);
					this.SendPropertyChanging();
					this._DDT_Anno = value;
					this.SendPropertyChanged("DDT_Anno");
					this.OnDDT_AnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDT_Numero", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string DDT_Numero
		{
			get
			{
				return this._DDT_Numero;
			}
			set
			{
				if ((this._DDT_Numero != value))
				{
					if (this._DDT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDDT_NumeroChanging(value);
					this.SendPropertyChanging();
					this._DDT_Numero = value;
					this.SendPropertyChanged("DDT_Numero");
					this.OnDDT_NumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo_Netto", DbType="Decimal(5,0) NOT NULL")]
		public decimal Importo_Netto
		{
			get
			{
				return this._Importo_Netto;
			}
			set
			{
				if ((this._Importo_Netto != value))
				{
					this.OnImporto_NettoChanging(value);
					this.SendPropertyChanging();
					this._Importo_Netto = value;
					this.SendPropertyChanged("Importo_Netto");
					this.OnImporto_NettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVA", DbType="Decimal(20,2) NOT NULL")]
		public decimal IVA
		{
			get
			{
				return this._IVA;
			}
			set
			{
				if ((this._IVA != value))
				{
					this.OnIVAChanging(value);
					this.SendPropertyChanging();
					this._IVA = value;
					this.SendPropertyChanged("IVA");
					this.OnIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pagata", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Pagata
		{
			get
			{
				return this._Pagata;
			}
			set
			{
				if ((this._Pagata != value))
				{
					this.OnPagataChanging(value);
					this.SendPropertyChanging();
					this._Pagata = value;
					this.SendPropertyChanged("Pagata");
					this.OnPagataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Fattura", DbType="Date NOT NULL")]
		public System.DateTime Data_Fattura
		{
			get
			{
				return this._Data_Fattura;
			}
			set
			{
				if ((this._Data_Fattura != value))
				{
					this.OnData_FatturaChanging(value);
					this.SendPropertyChanging();
					this._Data_Fattura = value;
					this.SendPropertyChanged("Data_Fattura");
					this.OnData_FatturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_FATTURA", Storage="_FORNITORE", ThisKey="P_IVA", OtherKey="P_IVA", IsForeignKey=true)]
		public FORNITORE FORNITORE
		{
			get
			{
				return this._FORNITORE.Entity;
			}
			set
			{
				FORNITORE previousValue = this._FORNITORE.Entity;
				if (((previousValue != value) 
							|| (this._FORNITORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORNITORE.Entity = null;
						previousValue.FATTURA.Remove(this);
					}
					this._FORNITORE.Entity = value;
					if ((value != null))
					{
						value.FATTURA.Add(this);
						this._P_IVA = value.P_IVA;
					}
					else
					{
						this._P_IVA = default(string);
					}
					this.SendPropertyChanged("FORNITORE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DDT_FATTURA", Storage="_DDT", ThisKey="DDT_P_IVA,DDT_Anno,DDT_Numero", OtherKey="P_IVA,Anno,Numero", IsForeignKey=true)]
		public DDT DDT
		{
			get
			{
				return this._DDT.Entity;
			}
			set
			{
				DDT previousValue = this._DDT.Entity;
				if (((previousValue != value) 
							|| (this._DDT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DDT.Entity = null;
						previousValue.FATTURA.Remove(this);
					}
					this._DDT.Entity = value;
					if ((value != null))
					{
						value.FATTURA.Add(this);
						this._DDT_P_IVA = value.P_IVA;
						this._DDT_Anno = value.Anno;
						this._DDT_Numero = value.Numero;
					}
					else
					{
						this._DDT_P_IVA = default(string);
						this._DDT_Anno = default(string);
						this._DDT_Numero = default(string);
					}
					this.SendPropertyChanged("DDT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
